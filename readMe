Comparative Analysis of Short-Read RNA Sequencing Tools Using Minimap2 as Ground Truth

Project Overview

The goal of this project is to compare the accuracy of STAR, HISAT2, and Minimap2 short read RNA-seq alignment. This includes evaluating the accuracy of splice junctions and approximate coordinates aligned in tools by comparing subreads extracted from long-read sequencing data against expected results derived long read Minimap2 alignment. The project is intended to help identify the strengths and weaknesses of various RNA sequencing tools when applied to different datasets.

Current State of the Project

This repository currently contains two Python scripts that perform specific tasks related to the project's goal:

1. Subread Extraction Script (`querytable.py`):
    - Purpose: Extracts random subreads from long-read sequencing BAM files, allowing for the generation of smaller read sequences that can be compared against short-read RNA sequencing tools.
    - Functionality: 
      - Parses CIGAR strings from BAM files to identify and handle clipped reads.
      - Outputs extracted subreads in FASTA format, which can be used for alignment and comparison with short-read tools.
    - Current Status: Fully implemented and functional. This script can be used to generate test data for short-read RNA sequencing tool evaluation.

2. CIGAR String Comparison Script (`cigarcomparison.py`):
    - Purpose: Compares the CIGAR strings of subreads against expected CIGAR strings derived from their corresponding long reads. This allows for the assessment of how well the subreads align back to the original full-length sequences.
    - Functionality: 
      - Aligns subreads to long reads and compares their CIGAR strings to calculate alignment accuracy and precision.
      - Outputs the comparison results in a TSV format for further analysis.
      - Prints out a summarized version of the information.
    - Current Status: Fully implemented and functional. This script can be used to evaluate the accuracy of short-read RNA sequencing tools by comparing their outputs against the expected results.

Project Goals and Next Steps

The overall aim is to extend this foundational work to compare different RNA sequencing tools using the subreads extracted by the `querytable.py` script and to evaluate their performance using the `cigar_comparison.py` script. The following tasks are recommended for anyone who wishes to continue the project:

1. Tool Integration and Comparison:
    - Objective: Integrate different short-read RNA sequencing tools (e.g., STAR, HISAT2, etc.) into the workflow.
    - Steps:
        - Align the subreads generated by `querytable.py` using these tools.
        - Compare the alignment results with the expected CIGAR strings using `cigarcomparison.py`.
        - Analyze and summarize the performance of each tool under various scenarios.

2. Scenario Testing:
    - Objective: Test the RNA sequencing tools across different conditions and datasets (e.g., varying levels of noise, different species, etc.).
    - Steps:
        - Prepare different datasets or introduce variations in the current dataset.
        - Run the alignment tools and analyze the results using the comparison script.
        - Document the findings and compare the performance of the tools across scenarios.

3. Documentation and Reporting:
    - Objective: Enhance the project documentation with detailed reports on tool performance and recommendations.
    - Steps:
        - Summarize the findings from the tool comparisons and scenario testing.
        - Create detailed documentation or reports that explain the results, strengths, and weaknesses of each tool.

How-To Use This Project
This section provides step-by-step instructions on how to use the scripts in this repository to compare the accuracy of short-read RNA sequencing tools against long-read sequencing data.

Prerequisites
Before you begin, ensure you have the following installed:

Python 3.x
pysam library (for handling BAM files)
tabulate library (for generating readable output tables)
STAR (https://github.com/alexdobin/STAR) or HISAT2 (https://daehwankimlab.github.io/hisat2/) RNA sequencing tools (if you plan to use these in your analysis)
Minimap2 (https://github.com/lh3/minimap2/tree/master)

Extract Subreads From Long-Read Minimap2 Alignment Output
    - Prepare your BAM file data (Minimap2 aligned reads) 
    - Run the querytable script: "python querytable.py -i /path/to/your/longread.bam -o /path/to/output.fasta 
      Replace "/path/to/your/longread.bam" with the path to your BAM file and "/path/to/output.fasta" with your desired FASTA output file

Subread Sequence ID Modification (Due to STAR and HISAT2 truncating the subreads' sequence IDs) 
    - Review the FASTA file output 
    - Ensure that bash is installed
    - Run "sed 's/\//=/g' /path/to/output.fasta > /path/to/modified/output.fasta" 
      Replace "/path/to/output.fasta" with your FASTA output file with the sampled subreads and "/path/to/modified/output.fasta" with the modified FASTA file

Align Subreads Using Short-Read RNA-seq Tools
    - Have HISAT2, STAR, and Minimap2 installed 
    - Take the modified FASTA file and align using one of the tools
    - Sort and index the BAM output file: 
       "samtools sort /path/to/aligned/output.bam -o /path/to/sorted/aligned/output.bam"
       "samtools index /path/to/sorted/aligned/output.bam" 
      Replace "/path/to/aligned/output.bam" with the actual output BAM file and "/path/to/sorted/aligned/output.bam" with whatever sorted output file you want.

Compare CIGAR strings to Evaluate Alignment Accuracy
    - Run the cigarcomparison.py script, changing your three inputs: 
      "long_read_bam_path" = "/path/to/your/longread.bam" 
      "subread_bam_path" = "/path/to/sorted/aligned/output.bam" 
      "output_file_path" = "/path/to/TSV/output.tsv" 
    - The script will print out a summarized version, although you can view the raw data on Excel through the TSV file output.

Contributing

If you're interested in contributing to this project, please follow these steps:

1. Fork the repository and create a new branch for your feature or fix.
2. Implement your changes and thoroughly test the functionality.
3. Submit a pull request with a clear description of your changes and their purpose.

Contact - For any questions or more information about the project, please contact:

Alvin Zhang - alvinttzhang7@gmail.com / atzhang@mxschool.edu 

Acknowledgments

Professor Heng Li (http://liheng.org/) for advising me on this project throughout the summer and giving me this incredible opportunity to work in his lab.
Huang Neng (https://github.com/huangnengCSU) as my mentor for this project.
Ying Zhou for his assistance with sequence ID troubles.
Rest of the Li Lab (https://hlilab.github.io/) 

Special thanks to the developers of the `pysam` and `tabulate` libraries, which are essential tools for handling BAM files and generating readable output tables, respectively.
